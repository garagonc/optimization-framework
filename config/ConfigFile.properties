[SolverSection]

solver.name = ipopt

optimization.name=self_consumption

control.timeout=10

#data.file=data.dat

model.base.path = /usr/src/app/optimization/models

model.name = ReferenceModel
googleapikey = AIzaSyDGzYRPF6cQRb2KOrhGKTZPJugAHBse7QU

#number for parallel processes in stochastic
stochastic.multi.workers = 6
stochastic.timeout.sec = 60
discrete.infeasibility.repeat.count = 2

solver.ipopt.max.iteration = 1000
solver.ipopt.timeout = 120
solver.gurobi.max.iteration = 1000
solver.gurobi.timeout = 3

[IO]
log.level = DEBUG
#channel can be MQTT or ZMQ (use MQTT)
channel=MQTT
mqtt.host = 172.17.0.1
#mqtt.host = mosquito_S4G
mqtt.port = 1883
zmq.host= 127.0.0.1
zmq.pub.port = 5555
zmq.sub.port = 5556

forecast.topic={"topic":"forecast/","mqtt.port":1883}

con.fronius.topic = {"topic":"FRONIUS/data","qos":1,"mqtt.port":1883}

location.data.path = prediction/resources

#lcoation provide can be osm or google (osm preferred)
location.api.provider = osm

#in seconds
mqtt.detach.threshold = 180

error.topic={"topic":"/PROFESS/error_calculation/","mqtt.port":1883, "host":"172.17.0.1"}

pv.data.base.path = prediction/resources
persist.real.data.path = optimization/resources

monitor.mqtt.topic = {"topic":"monitor/instance","qos":1,"mqtt.port":1883}

redis.host = redis_S4G

persist.base.file.path = optimization/resources
load.raw.data.file.size = 14400
pv.raw.data.file.size = 10800
number.of.gunicorn.workers = 2
wait.time.between.instances = 180
raw.data.file.save.frequency.sec = 300

influx.host = influx_S4G
influx.retention = 10d
