# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.mqtt import MQTT

from swagger_server import util


class ChargerRecharge(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, datalist: int=None, mqtt: MQTT=None):  # noqa: E501
        """ChargerRecharge - a model defined in Swagger

        :param datalist: The datalist of this ChargerRecharge.  # noqa: E501
        :type datalist: int
        :param mqtt: The mqtt of this ChargerRecharge.  # noqa: E501
        :type mqtt: MQTT
        """
        self.swagger_types = {
            'datalist': int,
            'mqtt': MQTT
        }

        self.attribute_map = {
            'datalist': 'datalist',
            'mqtt': 'mqtt'
        }

        self._datalist = datalist
        self._mqtt = mqtt

    @classmethod
    def from_dict(cls, dikt) -> 'ChargerRecharge':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The charger_recharge of this ChargerRecharge.  # noqa: E501
        :rtype: ChargerRecharge
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datalist(self) -> int:
        """Gets the datalist of this ChargerRecharge.


        :return: The datalist of this ChargerRecharge.
        :rtype: int
        """
        return self._datalist

    @datalist.setter
    def datalist(self, datalist: int):
        """Sets the datalist of this ChargerRecharge.


        :param datalist: The datalist of this ChargerRecharge.
        :type datalist: int
        """
        if datalist is not None and datalist > 1:  # noqa: E501
            raise ValueError("Invalid value for `datalist`, must be a value less than or equal to `1`")  # noqa: E501
        if datalist is not None and datalist < 0:  # noqa: E501
            raise ValueError("Invalid value for `datalist`, must be a value greater than or equal to `0`")  # noqa: E501

        self._datalist = datalist

    @property
    def mqtt(self) -> MQTT:
        """Gets the mqtt of this ChargerRecharge.


        :return: The mqtt of this ChargerRecharge.
        :rtype: MQTT
        """
        return self._mqtt

    @mqtt.setter
    def mqtt(self, mqtt: MQTT):
        """Sets the mqtt of this ChargerRecharge.


        :param mqtt: The mqtt of this ChargerRecharge.
        :type mqtt: MQTT
        """

        self._mqtt = mqtt
