# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class E(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, t: int=None, n: str=None, u: str=None, v: int=None, sv: str=None, bv: bool=None):  # noqa: E501
        """E - a model defined in Swagger

        :param t: The t of this E.  # noqa: E501
        :type t: int
        :param n: The n of this E.  # noqa: E501
        :type n: str
        :param u: The u of this E.  # noqa: E501
        :type u: str
        :param v: The v of this E.  # noqa: E501
        :type v: int
        :param sv: The sv of this E.  # noqa: E501
        :type sv: str
        :param bv: The bv of this E.  # noqa: E501
        :type bv: bool
        """
        self.swagger_types = {
            't': int,
            'n': str,
            'u': str,
            'v': int,
            'sv': str,
            'bv': bool
        }

        self.attribute_map = {
            't': 't',
            'n': 'n',
            'u': 'u',
            'v': 'v',
            'sv': 'sv',
            'bv': 'bv'
        }

        self._t = t
        self._n = n
        self._u = u
        self._v = v
        self._sv = sv
        self._bv = bv

    @classmethod
    def from_dict(cls, dikt) -> 'E':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The e of this E.  # noqa: E501
        :rtype: E
        """
        return util.deserialize_model(dikt, cls)

    @property
    def t(self) -> int:
        """Gets the t of this E.


        :return: The t of this E.
        :rtype: int
        """
        return self._t

    @t.setter
    def t(self, t: int):
        """Sets the t of this E.


        :param t: The t of this E.
        :type t: int
        """

        self._t = t

    @property
    def n(self) -> str:
        """Gets the n of this E.


        :return: The n of this E.
        :rtype: str
        """
        return self._n

    @n.setter
    def n(self, n: str):
        """Sets the n of this E.


        :param n: The n of this E.
        :type n: str
        """

        self._n = n

    @property
    def u(self) -> str:
        """Gets the u of this E.


        :return: The u of this E.
        :rtype: str
        """
        return self._u

    @u.setter
    def u(self, u: str):
        """Sets the u of this E.


        :param u: The u of this E.
        :type u: str
        """

        self._u = u

    @property
    def v(self) -> int:
        """Gets the v of this E.


        :return: The v of this E.
        :rtype: int
        """
        return self._v

    @v.setter
    def v(self, v: int):
        """Sets the v of this E.


        :param v: The v of this E.
        :type v: int
        """

        self._v = v

    @property
    def sv(self) -> str:
        """Gets the sv of this E.


        :return: The sv of this E.
        :rtype: str
        """
        return self._sv

    @sv.setter
    def sv(self, sv: str):
        """Sets the sv of this E.


        :param sv: The sv of this E.
        :type sv: str
        """

        self._sv = sv

    @property
    def bv(self) -> bool:
        """Gets the bv of this E.


        :return: The bv of this E.
        :rtype: bool
        """
        return self._bv

    @bv.setter
    def bv(self, bv: bool):
        """Sets the bv of this E.


        :param bv: The bv of this E.
        :type bv: bool
        """

        self._bv = bv
