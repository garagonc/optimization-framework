---
swagger: "2.0"
info:
  version: "0.0.2"
  title: "Optimization framework service"
  license:
    name: "Apache"
host: "localhost:8080"
basePath: "/v1"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /models:
    get:
      tags:
      - "models"
      summary: "Fetches all installed models in the framework"
      description: ""
      operationId: "get_models_in"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Model_answer"
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
  /models/{name}:
    get:
      tags:
      - "models"
      summary: "Mathematical model for the optimization solver"
      description: ""
      operationId: "get_optimization_model"
      produces:
      - "text/plain"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the loaded model"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Model"
        "405":
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
    put:
      tags:
      - "models"
      summary: "Mathematical model for the optimization solver"
      description: ""
      operationId: "optimization_model"
      consumes:
      - "text/plain"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the loaded model"
        required: true
        type: "string"
      - in: "body"
        name: "upModel"
        description: "Mathematical model that needs to be added to the optimization\
          \ framework"
        required: true
        schema:
          $ref: "#/definitions/Model"
      responses:
        "200":
          description: "OK"
        "405":
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
    delete:
      tags:
      - "models"
      summary: "Deletes the desired model of the framework"
      description: ""
      operationId: "delete_models"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the model to be deleted"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
  /inputs:
    get:
      tags:
      - "inputs"
      summary: "Receives data from the framework"
      description: ""
      operationId: "get_all_data_source_values"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/FileOutputAll"
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.inputs_controller"
    post:
      tags:
      - "inputs"
      summary: "Creates a new data source as input"
      description: ""
      operationId: "dataset_input_source"
      consumes:
      - "application/json"
      - "text/plain"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "File_Input_Source"
        description: "Dataset submitted to the framework"
        required: true
        schema:
          $ref: "#/definitions/FileInputSource"
      responses:
        "201":
          description: "Created succesfully"
          headers:
            Location:
              type: "string"
              description: "Id referencing the created instance."
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.inputs_controller"
  /inputs/ids:
    get:
      tags:
      - "inputs"
      summary: "Receives data from the framework"
      description: ""
      operationId: "get_all_data_source_ids"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/OutputIdsList"
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.inputs_controller"
  /inputs/{id}:
    get:
      tags:
      - "inputs"
      summary: "Receives data from the framework"
      description: ""
      operationId: "get_data_source_values"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the data source"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/FileInputSource"
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.inputs_controller"
    put:
      tags:
      - "inputs"
      summary: "Submits data to the framework"
      description: ""
      operationId: "dataset_input_put"
      consumes:
      - "application/json"
      - "text/plain"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the data source"
        required: true
        type: "string"
      - in: "body"
        name: "dataset"
        description: "Dataset submitted to the framework"
        required: true
        schema:
          $ref: "#/definitions/FileInputSource"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.inputs_controller"
    delete:
      tags:
      - "inputs"
      summary: "Deletes the loaded data"
      description: ""
      operationId: "delete_dataset_registry"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the registry to be deleted"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.inputs_controller"
  /outputs/mqtt/{id}:
    get:
      tags:
      - "outputs"
      summary: "Get mqtt output details"
      description: ""
      operationId: "get_output_source_mqtt"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the output data source to be fetched"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/OutputSource"
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.outputs_controller"
    put:
      tags:
      - "outputs"
      summary: "Creates a new outputs setpoint as ouput"
      description: ""
      operationId: "output_source_mqtt"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the data source to be actualized"
        required: true
        type: "string"
      - in: "body"
        name: "Output_Source"
        description: "Output data source to be created"
        required: true
        schema:
          $ref: "#/definitions/OutputSource"
      responses:
        "200":
          description: "Created succesfully"
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.outputs_controller"
    delete:
      tags:
      - "outputs"
      summary: "Deletes the registration output of the framework"
      description: ""
      operationId: "delete_mqtt_output"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the registry to be deleted"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.outputs_controller"
  /outputs/{id}:
    get:
      tags:
      - "outputs"
      summary: "Get ouput of the optimization"
      description: ""
      operationId: "get_output"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the registry to be actualized"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/OptimizationOutput"
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.outputs_controller"
    delete:
      tags:
      - "outputs"
      summary: "Deletes the output of the framework"
      description: ""
      operationId: "delete_output"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the registry to be deleted"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad request"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.outputs_controller"
  /optimization/start/{id}:
    put:
      tags:
      - "optimization"
      summary: "Command for starting the framework"
      description: ""
      operationId: "framework_start"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the registry to be started"
        required: true
        type: "string"
      - in: "body"
        name: "startOFW"
        description: "Start command for the optimization framework \n repetitions:\
          \ -1 infinite repetitions"
        required: true
        schema:
          $ref: "#/definitions/Start"
      responses:
        "200":
          description: "OK"
        "405":
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.optimization_controller"
  /optimization/stop/{id}:
    put:
      tags:
      - "optimization"
      summary: "Command for stoping the framework"
      description: ""
      operationId: "framework_stop"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the registry to be stopped"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
        "405":
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.optimization_controller"
  /optimization/status:
    get:
      tags:
      - "optimization"
      summary: "Command for getting status of the framework"
      description: ""
      operationId: "framework_status"
      consumes:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/StatusOutput"
        "405":
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.optimization_controller"
definitions:
  Start:
    type: "object"
    required:
    - "control_frequency"
    - "dT_in_seconds"
    - "horizon_in_steps"
    - "optimization_type"
    - "repetition"
    properties:
      repetition:
        type: "integer"
        format: "int32"
      control_frequency:
        type: "integer"
        format: "int32"
      horizon_in_steps:
        type: "integer"
        format: "int32"
      model_name:
        type: "string"
      solver:
        type: "string"
      dT_in_seconds:
        type: "integer"
        format: "int32"
      optimization_type:
        type: "string"
      single_ev:
        type: "boolean"
        default: false
      priority:
        type: "integer"
        format: "int32"
        default: -1
    example:
      control_frequency: 60
      horizon_in_steps: 24
      dT_in_seconds: 3600
      model_name: "model_name"
      repetition: 2
      solver: "ipopt"
      optimization_type: "discrete"
      single_ev: false
      priority: 1
  Path_Definition:
    type: "object"
    required:
    - "path"
    properties:
      path:
        type: "string"
        description: "Path where the results will be stored"
  FileInputSource:
    type: "object"
    properties:
      generic:
        $ref: "#/definitions/Generic_Files"
      load:
        $ref: "#/definitions/Load_File"
      photovoltaic:
        $ref: "#/definitions/PV_File"
      ESS:
        $ref: "#/definitions/ESS_File"
      grid:
        $ref: "#/definitions/grid"
      global_control:
        $ref: "#/definitions/Global_Control_File"
      EV:
        $ref: "#/definitions/ev_File"
      chargers:
        $ref: "#/definitions/chargers_File"
      uncertainty:
        $ref: "#/definitions/uncertainty_File"
    example:
      generic:
        custom_1:
        - datalist:
            - 12
            - 10
          meta:
            meta_1: 0.9
        - datalist:
            - 11
            - 13
          meta:
            meta_2: 0.9
        custom_2:
        - mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
            option: "predict"
          meta:
            meta_3: 0.9
        meta:
          meta_4: 12
      load:
        P_Load:
        - datalist:
            - 12
            - 10
          meta:
            pf_Load: 0.9
        - datalist:
            - 11
            - 13
          meta:
            pf_Load: 0.9
        - mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
            option: "predict"
          meta:
            pf_Load: 0.9
        Q_Load_T:
        - mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
            option: "predict"
          meta:
            pf_Load: 0.9
        - mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
            option: "predict"
          meta:
            pf_Load: 0.9
        Q_Load:
        - datalist:
            - 12
            - 10
          meta:
            pf_Load: 0.9
      ESS:
        SoC_Value:
        - datalist:
          - 41
          meta:
            ESS_Max_Discharge_Power: 2500
            ESS_Max_SoC: 90
            ESS_Charging_Eff: 0.9
            ESS_Min_SoC: 20
            ESS_Max_Charge_Power: 2500
            ESS_Discharging_Eff: 0.84999
            ESS_Capacity: 3560
        - datalist:
          - 41
          meta:
            ESS_Max_Discharge_Power: 2500
            ESS_Max_SoC: 90
            ESS_Charging_Eff: 0.9
            ESS_Min_SoC: 20
            ESS_Max_Charge_Power: 2500
            ESS_Discharging_Eff: 0.84999
            ESS_Capacity: 3560
        - mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          meta:
            ESS_Max_Discharge_Power: 2500
            ESS_Max_SoC: 90
            ESS_Charging_Eff: 0.9
            ESS_Min_SoC: 20
            ESS_Max_Charge_Power: 2500
            ESS_Discharging_Eff: 0.84999
            ESS_Capacity: 3560
      grid:
        grid_1:
        - meta:
            Q_Grid_Max_Export_Power: 750
            Min_Voltage_Drop: 5
            P_Grid_Max_Export_Power: 1550
            Max_Voltage_Drop: 10
      photovoltaic:
        P_PV:
        - datalist:
            - 12
            - 10
          meta:
            PV_Inv_Max_Power: 1300
            City: "Bonn"
            Country: "Germany"
        - datalist:
            - 11
            - 13
          meta:
            PV_Inv_Max_Power: 1300
            City: "Aachen"
            Country: "Germany"
        Q_PV:
          - datalist:
              - 12
              - 10
            meta:
              PV_Inv_Max_Power: 1300
              City: "Bonn"
              Country: "Germany"
          - datalist:
              - 11
              - 13
            meta:
              PV_Inv_Max_Power: 1300
              City: "Aachen"
              Country: "Germany"
      global_control:
        ESS_Control:
        - datalist:
            - 12
            - 10
          meta:
            GlobalTargetWeight: 1
            LocalTargetWeight: 3
        - mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
            reuseable: true
          meta:
            GlobalTargetWeight: 1
            LocalTargetWeight: 3
      EV:
        meta:
          Unit_Consumption_Assumption: 2.5
          Unit_Drop_Penalty: 1
          VAC_SoC_Value_override: 20
        ev1:
          Battery_Capacity_kWh: 18.699999999999999289457264239899814128875732421875
        ev2:
          Battery_Capacity_kWh: 18.699999999999999289457264239899814128875732421875
      chargers:
        charger1:
          Max_Charging_Power_kW: 7
          Hosted_EV: "ev1"
          SoC:
            datalist:
            - 0.200000000000
        charger2:
          Max_Charging_Power_kW: 7
          Hosted_EV: "ev2"
          SoC:
            datalist:
            - 0.200000
        charger3:
          Max_Charging_Power_kW: 7
          SoC:
            mqtt:
              qos: 1
              host: "hostname"
              topic: "topic_name"
              detachable: true
              option: "preprocess"
          recharge:
            mqtt:
              qos: 1
              host: "hostname"
              topic: "topic_name"
              option: "event"
      uncertainty:
        meta:
          monte_carlo_repetition: 10000
        Plugged_Time:
          mean: 18.760000000000001563194018672220408916473388671875
          std: 1.3000000000000000444089209850062616169452667236328125
        Unplugged_Time:
          mean: 7.32000000000000028421709430404007434844970703125
          std: 0.7800000000000000266453525910037569701671600341796875
        ESS_States:
          Min: 0
          Max: 100
          Steps: 10
        VAC_States:
          Min: 0
          Max: 100
          Steps: 2.5
  Global_Control_File:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        type: "object"
        properties:
          datalist:
            type: "array"
            items:
              type: "number"
          mqtt:
            $ref: "#/definitions/MQTT"
          meta:
            $ref: "#/definitions/metaGloablControl"
    required:
      - "ESS_Control"
    example:
      ESS_Control:
        - datalist:
            - 12
            - 10
          meta:
            GlobalTargetWeight: 1
            LocalTargetWeight: 3
        - mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
            reuseable: true
          meta:
            GlobalTargetWeight: 1
            LocalTargetWeight: 3
  PV_File:
    type: "object"
    required:
      - "P_PV"
    additionalProperties:
      type: "array"
      items:
        type: "object"
        properties:
          datalist:
            type: "array"
            items:
              type: "number"
          mqtt:
            $ref: "#/definitions/MQTT"
          meta:
            $ref: "#/definitions/metaPV"
    example:
      P_PV:
        - datalist:
            - 12
            - 10
          meta:
            PV_Inv_Max_Power: 1300
            City: "Bonn"
            Country: "Germany"
        - datalist:
            - 11
            - 13
          meta:
            PV_Inv_Max_Power: 1300
            City: "Aachen"
            Country: "Germany"
      Q_PV:
        - datalist:
            - 12
            - 10
          meta:
            PV_Inv_Max_Power: 1300
            City: "Bonn"
            Country: "Germany"
        - datalist:
            - 11
            - 13
          meta:
            PV_Inv_Max_Power: 1300
            City: "Aachen"
            Country: "Germany"
  Load_File:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        type: "object"
        properties:
          datalist:
            type: "array"
            items:
              type: "number"
          mqtt:
            $ref: "#/definitions/MQTT"
          meta:
            $ref: "#/definitions/metaLoad"
    example:
      P_Load:
        - datalist:
            - 12
            - 10
          meta:
            pf_Load: 0.9
        - datalist:
            - 11
            - 13
          meta:
            pf_Load: 0.9
      Q_Load_T:
        - datalist:
            - 12
            - 10
          meta:
            pf_Load: 0.9
      P_Load_R:
        - datalist:
            - 12
            - 10
          meta:
            pf_Load: 0.9
      P_Load_S:
        - datalist:
            - 12
            - 10
          meta:
            pf_Load: 0.9
      Q_Load_S:
        - datalist:
            - 12
            - 10
          meta:
            pf_Load: 0.9
      P_Load_T:
        - datalist:
            - 12
            - 10
          meta:
            pf_Load: 0.9
      Q_Load:
        - datalist:
            - 12
            - 10
          meta:
            pf_Load: 0.9
  ESS_File:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        type: "object"
        properties:
          datalist:
            type: "array"
            items:
              type: "number"
              minimum: 0
              maximum: 100
          mqtt:
            $ref: "#/definitions/MQTT"
          meta:
            $ref: "#/definitions/metaESS"
    example:
      SoC_Value:
        - datalist:
          - 41
          meta:
            ESS_Max_Discharge_Power: 2500
            ESS_Max_SoC: 90
            ESS_Charging_Eff: 0.9
            ESS_Min_SoC: 20
            ESS_Max_Charge_Power: 2500
            ESS_Discharging_Eff: 0.84999
            ESS_Capacity: 3560
        - datalist:
          - 41
          meta:
            ESS_Max_Discharge_Power: 2500
            ESS_Max_SoC: 90
            ESS_Charging_Eff: 0.9
            ESS_Min_SoC: 20
            ESS_Max_Charge_Power: 2500
            ESS_Discharging_Eff: 0.84999
            ESS_Capacity: 3560
        - mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          meta:
            ESS_Max_Discharge_Power: 2500
            ESS_Max_SoC: 90
            ESS_Charging_Eff: 0.9
            ESS_Min_SoC: 20
            ESS_Max_Charge_Power: 2500
            ESS_Discharging_Eff: 0.84999
            ESS_Capacity: 3560
  uncertainty_File:
    type: "object"
    properties:
      meta:
        $ref: "#/definitions/uncertainty_meta"
      Plugged_Time:
        $ref: "#/definitions/uncertainty_File_Plugged_Time"
      Unplugged_Time:
        $ref: "#/definitions/uncertainty_File_Plugged_Time"
      ESS_States:
        $ref: "#/definitions/uncertainty_File_ESS_States"
      VAC_States:
        $ref: "#/definitions/uncertainty_File_ESS_States"
    example:
      meta:
        monte_carlo_repetition: 10000
      Plugged_Time:
        mean: 18.760000000000001563194018672220408916473388671875
        std: 1.3000000000000000444089209850062616169452667236328125
      Unplugged_Time:
        mean: 7.32000000000000028421709430404007434844970703125
        std: 0.7800000000000000266453525910037569701671600341796875
      ESS_States:
        Min: 0
        Max: 100
        Steps: 10
      VAC_States:
        Min: 0
        Max: 100
        Steps: 2.5
  chargers_File:
    type: "object"
    example:
      charger1:
        Max_Charging_Power_kW: 7
        Hosted_EV: "ev1"
        SoC:
          datalist:
          - 0.200000000000
      charger2:
        Max_Charging_Power_kW: 7
        Hosted_EV: "ev2"
        SoC:
          datalist:
          - 0.200000
      charger3:
        Max_Charging_Power_kW: 7
        SoC:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
            detachable: true
            option: "preprocess"
        recharge:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
            option: "event"
    additionalProperties:
      $ref: "#/definitions/charger"
  ev_File:
    type: "object"
    properties:
      meta:
        $ref: "#/definitions/ev_meta"
    example:
      meta:
        Unit_Consumption_Assumption: 2.5
        Unit_Drop_Penalty: 1
        VAC_SoC_Value_override: 20
      ev1:
        Battery_Capacity_kWh: 18.699999999999999289457264239899814128875732421875
      ev2:
        Battery_Capacity_kWh: 18.699999999999999289457264239899814128875732421875
    additionalProperties:
      $ref: "#/definitions/ev"
  Generic_Files:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        type: "object"
        properties:
          datalist:
            type: "array"
            items:
              type: "number"
          mqtt:
            $ref: "#/definitions/MQTT"
          meta:
            $ref: "#/definitions/metaGeneric"
    properties:
      meta:
        $ref: "#/definitions/metaGeneric"
    example:
      custom_1:
        - datalist:
            - 12
            - 10
          meta:
            meta_1: 0.9
        - datalist:
            - 11
            - 13
          meta:
            meta_2: 0.9
      custom_2:
      - mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
          option: "predict"
        meta:
          meta_3: 0.9
      meta:
        meta_4: 12
  grid:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        type: "object"
        properties:
          datalist:
            type: "array"
            items:
              type: "number"
          mqtt:
            $ref: "#/definitions/MQTT"
          meta:
            $ref: "#/definitions/metaGrid"
    example:
      grid_1:
      - meta:
          Q_Grid_Max_Export_Power: 750
          Min_Voltage_Drop: 5
          P_Grid_Max_Export_Power: 1550
          Max_Voltage_Drop: 10
  MQTT:
    type: "object"
    required:
    - "host"
    - "topic"
    properties:
      host:
        type: "string"
      topic:
        type: "string"
      qos:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 2
      port:
        type: "integer"
        format: "int32"
        minimum: 0
      username:
        type: "string"
      password:
        type: "string"
      ca_cert_path:
        type: "string"
      insecure:
        type: "boolean"
      detachable:
        type: "boolean"
      reuseable:
        type: "boolean"
      option:
        type: "string"
        enum: ["predict", "preprocess", "event", "sampling", "pv_predict"]
        description: "option of the type of input"
    example:
      qos: 1
      host: "hostname"
      topic: "topic_name"
      option: "predict"
  Model:
    type: "object"
    xml:
      name: "Model"
  OutputSource:
    type: "object"
    properties:
      generic:
        $ref: "#/definitions/GenericOutput"
      photovoltaic:
        $ref: "#/definitions/PV_Output"
      ESS:
        $ref: "#/definitions/ESS_Output"
      grid:
        $ref: "#/definitions/grid_Output"
      error_calculation:
        $ref: "#/definitions/Error_Cal_Output"
    example:
      ESS:
        P_ESS_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
      grid:
        P_Grid_R_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        P_Grid_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        P_Grid_T_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        P_Grid_S_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        Q_Grid_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        Q_Grid_R_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        Q_Grid_S_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        Q_Grid_T_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
      photovoltaic:
        Q_PV_T_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        P_PV_R_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        P_PV_T_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        Q_PV_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        P_PV_S_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        Q_PV_R_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        Q_PV_S_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        P_PV_Output:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
      generic:
        custom_name_1:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        custom_name_2:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
      error_calculation:
        P_Load:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
        Q_Load:
          mqtt:
            qos: 1
            host: "hostname"
            topic: "topic_name"
          unit: "W"
          horizon_values: false
  Model_answer:
    type: "object"
    properties:
      models:
        type: "array"
        items:
          $ref: "#/definitions/Model_Output"
    example:
      models:
      - name: "name"
        solver: "ipopt"
      - name: "name"
        solver: "ipopt"
  Model_Output:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
      solver:
        type: "string"
    example:
      name: "name"
      solver: "ipopt"
  GenericOutput:
    type: "object"
    example:
      custom_name_1:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      custom_name_2:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
    additionalProperties:
      $ref: "#/definitions/SourceOutput"
  Error_Cal_Output:
    type: "object"
    example:
      P_Load:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      Q_Load:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
    additionalProperties:
      $ref: "#/definitions/SourceOutput"
  Status:
    type: "object"
    properties:
      config:
        $ref: "#/definitions/Start"
      status:
        type: "string"
      start_time:
        type: "number"
        format: "float"
    example:
      start_time: 0.8008281999999999900552438703016377985477447509765625
      config:
        control_frequency: 60
        horizon_in_steps: 24
        dT_in_seconds: 3600
        model_name: "model_name"
        repetition: 2
        solver: "ipopt"
        optimization_type: "discrete"
      status: "status"
  StatusOutput:
    type: "object"
    properties:
      status:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Status"
    example:
      status:
        key:
          start_time: 0.8008281999999999900552438703016377985477447509765625
          config:
            control_frequency: 60
            horizon_in_steps: 24
            dT_in_seconds: 3600
            model_name: "model_name"
            repetition: 2
            solver: "ipopt"
            optimization_type: "discrete"
          status: "status"
  OptimizationOutput:
    type: "object"
    example:
      P_ESS_Output:
        "1549296638": 200.5
        "1549296648": 200.5
        "1549296658": 200.5
        "1549296668": 200.5
        "1549296678": 200.5
      P_Grid_Output:
        "1549296638": 200.5
        "1549296648": 200.5
        "1549296658": 200.5
        "1549296668": 200.5
        "1549296678": 200.5
    additionalProperties:
      type: "object"
      additionalProperties:
        type: "number"
        format: "float"
  OutputIdsList:
    type: "array"
    items:
      type: "string"
    example:
    - "a123asd456"
    - "b456fgh789"
    - "c852edc963"
  ev:
    type: "object"
    properties:
      Battery_Capacity_kWh:
        type: "number"
        format: "float"
    example:
      Battery_Capacity_kWh: 18.699999999999999289457264239899814128875732421875
  charger:
    type: "object"
    properties:
      Max_Charging_Power_kW:
        type: "number"
        format: "float"
      Hosted_EV:
        type: "string"
      SoC:
        type: "object"
        properties:
          datalist:
            type: "array"
            items:
              type: "number"
              format: "float"
              minimum: 0
              maximum: 1
          mqtt:
            $ref: "#/definitions/MQTT"
      recharge:
        type: "object"
        properties:
          datalist:
            type: "integer"
            format: "int32"
            minimum: 0
            maximum: 1
          mqtt:
            $ref: "#/definitions/MQTT"
    example:
      Max_Charging_Power_kW: 7
      Hosted_EV: "ev1"
      SoC: 0.200000000000000011102230246251565404236316680908203125
  uncertainty_File_Plugged_Time:
    properties:
      mean:
        type: "number"
        format: "float"
      std:
        type: "number"
        format: "float"
  uncertainty_File_ESS_States:
    properties:
      Min:
        type: "integer"
        format: "int32"
      Max:
        type: "integer"
        format: "int32"
      Steps:
        type: "integer"
        format: "int32"
  metaGloablControl:
    properties:
      GlobalTargetWeight:
        type: "number"
        format: "float"
      LocalTargetWeight:
        type: "number"
        format: "float"
    example:
      GlobalTargetWeight: 1
      LocalTargetWeight: 3
  metaGeneric:
    type: "object"
    additionalProperties:
      type: "number"
      format: "float"
  metaESS:
    type: "object"
    properties:
      ESS_Min_SoC:
        type: "number"
        format: "float"
        minimum: 0
        maximum: 1
      ESS_Max_SoC:
        type: "number"
        format: "float"
        minimum: 0
        maximum: 1
      ESS_Capacity:
        type: "number"
        format: "float"
      ESS_Max_Charge_Power:
        type: "number"
        format: "float"
      ESS_Max_Discharge_Power:
        type: "number"
        format: "float"
      ESS_Charging_Eff:
        type: "number"
        format: "float"
        minimum: 0
        maximum: 1
      ESS_Discharging_Eff:
        type: "number"
        format: "float"
        minimum: 0
        maximum: 1
    example:
      ESS_Max_Discharge_Power: 2500
      ESS_Max_SoC: 0.90000000000000002220446049250313080847263336181640625
      ESS_Charging_Eff: 0.90000000000000002220446049250313080847263336181640625
      ESS_Min_SoC: 0.200000000000000011102230246251565404236316680908203125
      ESS_Max_Charge_Power: 2500
      ESS_Discharging_Eff: 0.84999999999999997779553950749686919152736663818359375
      ESS_Capacity: 3560
  ev_meta:
    type: "object"
    properties:
      Unit_Consumption_Assumption:
        type: "number"
        format: "float"
      Unit_Drop_Penalty:
        type: "number"
        format: "float"
      VAC_SoC_Value_override:
        type: "number"
        format: "float"
    example:
      Unit_Consumption_Assumption: 2.5
      Unit_Drop_Penalty: 1
      VAC_SoC_Value_override: 20
  metaPV:
    type: "object"
    properties:
      PV_Inv_Max_Power:
        type: "integer"
        format: "int32"
      City:
        type: "string"
      Country:
        type: "string"
    example:
      PV_Inv_Max_Power: 1300
      City: "Bonn"
      Country: "Germany"
  metaLoad:
    type: "object"
    properties:
      pf_Load:
        type: "number"
        format: "float"
        minimum: 0
        maximum: 1
    example:
      pf_Load: 0.90000000000000002220446049250313080847263336181640625
  metaGrid:
    type: "object"
    properties:
      P_Grid_Max_Export_Power:
        type: "integer"
        format: "int32"
      Q_Grid_Max_Export_Power:
        type: "integer"
        format: "int32"
      Max_Voltage_Drop:
        type: "number"
        format: "float"
        minimum: 0
        maximum: 100
      Min_Voltage_Drop:
        type: "number"
        format: "float"
        minimum: 0
        maximum: 100
    example:
      Q_Grid_Max_Export_Power: 750
      Min_Voltage_Drop: 5
      P_Grid_Max_Export_Power: 1550
      Max_Voltage_Drop: 10
  uncertainty_meta:
    type: "object"
    properties:
      monte_carlo_repetition:
        type: "integer"
        format: "int32"
    example:
      monte_carlo_repetition: 10000
  FileOutputAll:
    type: "object"
    example:
      "12asd123d":
        generic:
          custom_name_1:
          - 1200
          - 12300
          custom_name_2:
          - 1500
          - 1300
        load:
          P_Load_R:
          - 705.3999999999999772626324556767940521240234375
          - 305.6000000000000227373675443232059478759765625
          Q_Load_T:
          - 705.3999999999999772626324556767940521240234375
          - 305.6000000000000227373675443232059478759765625
          P_Load_S:
          - 705.3999999999999772626324556767940521240234375
          - 305.6000000000000227373675443232059478759765625
          Q_Load_S:
          - 705.3999999999999772626324556767940521240234375
          - 305.6000000000000227373675443232059478759765625
          P_Load_T:
          - 705.3999999999999772626324556767940521240234375
          - 305.6000000000000227373675443232059478759765625
          Q_Load:
          - 705.3999999999999772626324556767940521240234375
          - 305.6000000000000227373675443232059478759765625
          P_Load:
          - 705.3999999999999772626324556767940521240234375
          - 305.6000000000000227373675443232059478759765625
          Q_Load_R:
          - 705.3999999999999772626324556767940521240234375
          - 305.6000000000000227373675443232059478759765625
        ESS:
          SoC_Value: 41
          meta:
            ESS_Max_Discharge_Power: 2500
            ESS_Max_SoC: 90
            ESS_Charging_Eff: 0.90000000000000002220446049250313080847263336181640625
            ESS_Min_SoC: 20
            ESS_Max_Charge_Power: 2500
            ESS_Discharging_Eff: 0.84999999999999997779553950749686919152736663818359375
            ESS_Capacity: 3560
        grid:
          meta:
            Q_Grid_Max_Export_Power: 750
            Min_Voltage_Drop: 5
            P_Grid_Max_Export_Power: 1550
            Max_Voltage_Drop: 10
        photovoltaic:
          P_PV:
          - 705.3999999999999772626324556767940521240234375
          - 305.6000000000000227373675443232059478759765625
        global_control:
          ESS_Control:
          - 1300.200000000000045474735088646411895751953125
          - 1200.5
      "45dsf785s":
        load:
          Q_Load:
          - 705.3999999999999772626324556767940521240234375
          - 305.6000000000000227373675443232059478759765625
          P_Load:
          - 705.3999999999999772626324556767940521240234375
          - 305.6000000000000227373675443232059478759765625
        ESS:
          SoC_Value: 41
          meta:
            ESS_Max_Discharge_Power: 2500
            ESS_Max_SoC: 90
            ESS_Charging_Eff: 0.90000000000000002220446049250313080847263336181640625
            ESS_Min_SoC: 20
            ESS_Max_Charge_Power: 2500
            ESS_Discharging_Eff: 0.84999999999999997779553950749686919152736663818359375
            ESS_Capacity: 3560
        grid:
          meta:
            Q_Grid_Max_Export_Power: 750
            Min_Voltage_Drop: 5
            P_Grid_Max_Export_Power: 1550
            Max_Voltage_Drop: 10
        photovoltaic:
          P_PV:
          - 705.3999999999999772626324556767940521240234375
          - 305.6000000000000227373675443232059478759765625
        global_control:
          ESS_Control:
          - 1300.200000000000045474735088646411895751953125
          - 1200.5
    additionalProperties:
      $ref: "#/definitions/FileInputSource"
  PV_Output:
    type: "object"
    properties:
      P_PV_Output:
        $ref: "#/definitions/SourceOutput"
      P_PV_R_Output:
        $ref: "#/definitions/SourceOutput"
      P_PV_S_Output:
        $ref: "#/definitions/SourceOutput"
      P_PV_T_Output:
        $ref: "#/definitions/SourceOutput"
      Q_PV_Output:
        $ref: "#/definitions/SourceOutput"
      Q_PV_R_Output:
        $ref: "#/definitions/SourceOutput"
      Q_PV_S_Output:
        $ref: "#/definitions/SourceOutput"
      Q_PV_T_Output:
        $ref: "#/definitions/SourceOutput"
    example:
      Q_PV_T_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      P_PV_R_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      P_PV_T_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      Q_PV_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      P_PV_S_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      Q_PV_R_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      Q_PV_S_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      P_PV_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
  ESS_Output:
    type: "object"
    required:
    - "P_ESS_Output"
    properties:
      P_ESS_Output:
        description: "Setting power of the ESS"
        $ref: "#/definitions/SourceOutput"
    example:
      P_ESS_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
  grid_Output:
    type: "object"
    properties:
      P_Grid_Output:
        $ref: "#/definitions/SourceOutput"
      P_Grid_R_Output:
        $ref: "#/definitions/SourceOutput"
      P_Grid_S_Output:
        $ref: "#/definitions/SourceOutput"
      P_Grid_T_Output:
        $ref: "#/definitions/SourceOutput"
      Q_Grid_Output:
        $ref: "#/definitions/SourceOutput"
      Q_Grid_R_Output:
        $ref: "#/definitions/SourceOutput"
      Q_Grid_S_Output:
        $ref: "#/definitions/SourceOutput"
      Q_Grid_T_Output:
        $ref: "#/definitions/SourceOutput"
    example:
      P_Grid_R_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      P_Grid_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      P_Grid_T_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      P_Grid_S_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      Q_Grid_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      Q_Grid_R_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      Q_Grid_S_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
      Q_Grid_T_Output:
        mqtt:
          qos: 1
          host: "hostname"
          topic: "topic_name"
        unit: "W"
        horizon_values: false
  SourceOutput:
    type: "object"
    required:
    - "mqtt"
    properties:
      mqtt:
        $ref: "#/definitions/MQTT"
      unit:
        type: "string"
      horizon_values:
        type: "boolean"
        default: true
      base_name:
        type: "string"
    description: "Selection between MQTT or file mode inputs or outputs"
    example:
      mqtt:
        qos: 1
        host: "hostname"
        topic: "topic_name"
      unit: "W"
      horizon_values: false