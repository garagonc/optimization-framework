---
swagger: "2.0"
info:
  version: "0.0.2"
  title: "Optimization framework service"
  license:
    name: "Apache"
host: "192.168.99.100:8080"
basePath: "/v1"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /models/upload/{name}:
    post:
      tags:
      - "models"
      summary: "Mathematical model for the optimization solver"
      description: ""
      operationId: "optimization_model"
      consumes:
      - "text/plain"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the loaded model"
        required: true
        type: "string"
      - in: "body"
        name: "upModel"
        description: "Mathematical model that needs to be added to the optimization\
          \ framework"
        required: true
        schema:
          $ref: "#/definitions/Model"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
  /models/upload/url:
    post:
      tags:
      - "models"
      summary: "Url for the mathematical model for the optimization solver"
      description: ""
      operationId: "optimization_model_url"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "upModelUrl"
        description: "Url of the mathematical model that needs to be added to the\
          \ optimization framework"
        required: true
        schema:
          $ref: "#/definitions/Model_url"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
  /registry/input/:
    post:
      tags:
      - "registry"
      summary: "Creates a new data source as input"
      description: ""
      operationId: "input_source"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Input_Source"
        description: "Data source to be created"
        required: true
        schema:
          $ref: "#/definitions/InputSource"
      responses:
        201:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.registry_controller"
  /registry/output/:
    post:
      tags:
      - "registry"
      summary: "Creates a new data source as ouput"
      description: ""
      operationId: "output_source"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Output_Source"
        description: "Output data source to be created"
        required: true
        schema:
          $ref: "#/definitions/OutputSource"
      responses:
        200:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.registry_controller"
  /data/{id}:
    get:
      tags:
      - "data"
      summary: "Receives data from the framework"
      description: ""
      operationId: "get_data_in"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the data source"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "dataset"
        description: "Dataset submitted to the framework"
        required: false
        schema:
          $ref: "#/definitions/dataset"
      responses:
        200:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_controller"
    post:
      tags:
      - "data"
      summary: "Submits data to the framework"
      description: ""
      operationId: "data_in"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the data source"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "dataset"
        description: "Dataset submitted to the framework"
        required: false
        schema:
          $ref: "#/definitions/dataset"
      responses:
        200:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_controller"
  /command/start:
    put:
      tags:
      - "command"
      summary: "Command for starting the framework"
      description: ""
      operationId: "framework_start"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "startOFW"
        description: "Start command for the optimization framework \n repetitions:\
          \ -1 infinite repetitions"
        required: true
        schema:
          $ref: "#/definitions/Start"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.command_controller"
  /command/stop:
    put:
      tags:
      - "command"
      summary: "Command for stoping the framework"
      description: ""
      operationId: "framework_stop"
      consumes:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.command_controller"
definitions:
  Start:
    type: "object"
    required:
    - "horizon"
    - "repetition"
    - "time_step"
    properties:
      repetition:
        type: "integer"
        format: "int32"
      time_step:
        type: "integer"
        format: "int32"
      horizon:
        type: "integer"
        format: "int32"
      model_name:
        type: "string"
    example:
      time_step: 6
      horizon: 1
      model_name: "model_name"
      repetition: -1
  Load:
    type: "object"
    required:
    - "Forecast"
    - "P_Load"
    properties:
      Forecast:
        type: "boolean"
        description: "Is it forecasted data? Or row data"
      P_Load:
        $ref: "#/definitions/Source"
      Q_Load:
        $ref: "#/definitions/Source"
      meta:
        $ref: "#/definitions/metaLoad"
    example:
      meta:
        pf_Load: 6.02745629999999987802539180847816169261932373046875
      Forecast: false
  metaLoad:
    type: "object"
    properties:
      pf_Load:
        type: "number"
        format: "float"
    example:
      pf_Load: 6.02745629999999987802539180847816169261932373046875
  PV:
    type: "object"
    required:
    - "Forecast"
    - "P_PV"
    properties:
      Forecast:
        type: "boolean"
        description: "Is it forecasted data? Or row data"
      P_PV:
        $ref: "#/definitions/Source"
      meta:
        $ref: "#/definitions/metaPV"
    description: "Definition of a PV element as input for the optimizer"
    example:
      P_PV:
        file: false
        mqtt:
          qos: 0
          topic: "topic"
          host: "url"
      meta:
        PV_Inv_Max_Power: 1
      Forecast: false
  PV_Output:
    type: "object"
    required:
    - "P_PV_Output"
    properties:
      P_PV_Output:
        $ref: "#/definitions/Source"
      Q_PV_Output:
        $ref: "#/definitions/Source"
    example:
      Q_PV_Output:
        file: false
        mqtt:
          qos: 0
          topic: "topic"
          host: "url"
      P_PV_Output:
        file: false
        mqtt:
          qos: 0
          topic: "topic"
          host: "url"
  metaPV:
    type: "object"
    properties:
      PV_Inv_Max_Power:
        type: "integer"
        format: "int32"
    example:
      PV_Inv_Max_Power: 1
  ESS:
    type: "object"
    required:
    - "SoC_Value"
    properties:
      SoC_Value:
        $ref: "#/definitions/Source"
      meta:
        $ref: "#/definitions/metaESS"
    example:
      SoC_Value:
        file: false
        mqtt:
          qos: 0
          topic: "topic"
          host: "url"
      meta:
        Max_SoC: 5
        ESS_Max_Discharge_Power: 9
        ESS_Charging_Eff: 3.61607669999999981058635967201553285121917724609375
        ESS_Max_Charge_Power: 7
        Min_SoC: 5
        ESS_Discharging_Eff: 2.027123000000000008213874025386758148670196533203125
        ESS_Capacity: 2
  ESS_Output:
    type: "object"
    required:
    - "P_ESS_Output"
    properties:
      P_ESS_Output:
        description: "Setting power of the ESS"
        $ref: "#/definitions/Source"
    example:
      P_ESS_Output:
        file: false
        mqtt:
          qos: 0
          topic: "topic"
          host: "url"
  metaESS:
    type: "object"
    properties:
      Min_SoC:
        type: "integer"
        format: "int32"
      Max_SoC:
        type: "integer"
        format: "int32"
      ESS_Capacity:
        type: "integer"
        format: "int32"
      ESS_Max_Charge_Power:
        type: "integer"
        format: "int32"
      ESS_Max_Discharge_Power:
        type: "integer"
        format: "int32"
      ESS_Charging_Eff:
        type: "number"
        format: "float"
      ESS_Discharging_Eff:
        type: "number"
        format: "float"
    example:
      Max_SoC: 5
      ESS_Max_Discharge_Power: 9
      ESS_Charging_Eff: 3.61607669999999981058635967201553285121917724609375
      ESS_Max_Charge_Power: 7
      Min_SoC: 5
      ESS_Discharging_Eff: 2.027123000000000008213874025386758148670196533203125
      ESS_Capacity: 2
  grid:
    type: "object"
    properties:
      meta:
        $ref: "#/definitions/metaGrid"
    example:
      meta:
        Q_Grid_Max_Export_Power: 7
        Min_Voltage_Drop: 1.0246456999999999926131977190379984676837921142578125
        P_Grid_Max_Export_Power: 4
        Max_Voltage_Drop: 1.2315134999999999276809603543370030820369720458984375
  grid_Output:
    type: "object"
    required:
    - "P_Grid_Export_Output"
    properties:
      P_Grid_Export_Output:
        $ref: "#/definitions/Source"
      Q_Grid_Export_Output:
        $ref: "#/definitions/Source"
      P_Grid_Import_Output:
        $ref: "#/definitions/Source"
      Q_Grid_Import_Output:
        $ref: "#/definitions/Source"
    example:
      P_Grid_Export_Output:
        file: false
        mqtt:
          qos: 0
          topic: "topic"
          host: "url"
      Q_Grid_Export_Output:
        file: false
        mqtt:
          qos: 0
          topic: "topic"
          host: "url"
      P_Grid_Import_Output:
        file: false
        mqtt:
          qos: 0
          topic: "topic"
          url: "url"
      Q_Grid_Import_Output:
        file: false
        mqtt:
          qos: 0
          topic: "topic"
          host: "url"
  metaGrid:
    type: "object"
    properties:
      P_Grid_Max_Export_Power:
        type: "integer"
        format: "int32"
      Q_Grid_Max_Export_Power:
        type: "integer"
        format: "int32"
      Max_Voltage_Drop:
        type: "number"
        format: "float"
      Min_Voltage_Drop:
        type: "number"
        format: "float"
    example:
      Q_Grid_Max_Export_Power: 7
      Min_Voltage_Drop: 1.0246456999999999926131977190379984676837921142578125
      P_Grid_Max_Export_Power: 4
      Max_Voltage_Drop: 1.2315134999999999276809603543370030820369720458984375
  Source:
    type: "object"
    properties:
      file:
        type: "boolean"
      mqtt:
        $ref: "#/definitions/MQTT"
    description: "Selection between MQTT or file mode inputs or outputs"
    example:
      file: false
      mqtt:
        qos: 0
        topic: "topic"
        host: "url"
  MQTT:
    type: "object"
    required:
    - "host"
    properties:
      host:
        type: "string"
      topic:
        type: "string"
      qos:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 2
    example:
      qos: 0
      topic: "topic"
      host: "url"
  weather:
    type: "object"
    properties:
      url:
        type: "string"
    example:
      url: "url"
  dataset:
    type: "object"
    properties:
      bn:
        type: "string"
      bt:
        type: "integer"
        format: "int64"
      bu:
        type: "string"
      ver:
        type: "integer"
        format: "int64"
      e:
        $ref: "#/definitions/e"
  e:
    type: "object"
    properties:
      t:
        type: "integer"
        format: "int64"
      n:
        type: "string"
      u:
        type: "string"
      v:
        type: "integer"
        format: "int64"
      sv:
        type: "string"
      bv:
        type: "boolean"
  Model:
    type: "object"
    xml:
      name: "Model"
  Model_url:
    type: "object"
    required:
    - "upModelUrl"
    properties:
      upModelUrl:
        type: "string"
    xml:
      name: "ModelUrl"
      wrapped: true
  InputSource:
    type: "object"
    properties:
      load:
        $ref: "#/definitions/Load"
      photovoltaic:
        $ref: "#/definitions/PV"
      ESS:
        $ref: "#/definitions/ESS"
      grid:
        $ref: "#/definitions/grid"
      market:
        $ref: "#/definitions/Source"
      weather:
        $ref: "#/definitions/weather"
    example:
      load:
        meta:
          pf_Load: 6.02745629999999987802539180847816169261932373046875
        Forecast: false
      ESS:
        meta:
          Max_SoC: 5
          ESS_Max_Discharge_Power: 9
          ESS_Charging_Eff: 3.61607669999999981058635967201553285121917724609375
          ESS_Max_Charge_Power: 7
          Min_SoC: 5
          ESS_Discharging_Eff: 2.027123000000000008213874025386758148670196533203125
          ESS_Capacity: 2
      grid:
        meta:
          Q_Grid_Max_Export_Power: 7
          Min_Voltage_Drop: 1.0246456999999999926131977190379984676837921142578125
          P_Grid_Max_Export_Power: 4
          Max_Voltage_Drop: 1.2315134999999999276809603543370030820369720458984375
      photovoltaic:
        meta:
          PV_Inv_Max_Power: 1
        Forecast: false
      weather:
        url: "url"
  OutputSource:
    type: "object"
    properties:
      photovoltaic:
        $ref: "#/definitions/PV_Output"
      ESS:
        $ref: "#/definitions/ESS_Output"
      grid:
        $ref: "#/definitions/grid_Output"
    example:
      ESS:
        P_ESS_Output:
          file: false
          mqtt:
            qos: 0
            topic: "topic"
            host: "url"
      grid:
        P_Grid_Export_Output:
          file: false
          mqtt:
            qos: 0
            topic: "topic"
            host: "url"
        Q_Grid_Export_Output:
          file: false
          mqtt:
            qos: 0
            topic: "topic"
            host: "url"
        P_Grid_Import_Output:
          file: false
          mqtt:
            qos: 0
            topic: "topic"
            url: "url"
        Q_Grid_Import_Output:
          file: false
          mqtt:
            qos: 0
            topic: "topic"
            host: "url"
      photovoltaic:
        Q_PV_Output:
          file: false
          mqtt:
            qos: 0
            topic: "topic"
            host: "url"
        P_PV_Output:
          file: false
          mqtt:
            qos: 0
            topic: "topic"
            host: "url"
