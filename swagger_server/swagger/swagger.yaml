---
swagger: "2.0"
info:
  version: "0.0.2"
  title: "Optimization framework service"
  license:
    name: "Apache"
host: "192.168.99.100:8080"
basePath: "/v1"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /models:
    get:
      tags:
      - "models"
      summary: "Fetches all installed models in the framework"
      description: ""
      operationId: "get_models_in"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Model_answer"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
    delete:
      tags:
      - "models"
      summary: "Deletes all models of the framework"
      description: ""
      operationId: "delete_models_all"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
  /models/{name}:
    delete:
      tags:
      - "models"
      summary: "Deletes the desired model of the framework"
      description: ""
      operationId: "delete_models"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the model to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
  /models/upload/{name}:
    post:
      tags:
      - "models"
      summary: "Mathematical model for the optimization solver"
      description: ""
      operationId: "optimization_model"
      consumes:
      - "text/plain"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the loaded model"
        required: true
        type: "string"
      - in: "body"
        name: "upModel"
        description: "Mathematical model that needs to be added to the optimization\
          \ framework"
        required: true
        schema:
          $ref: "#/definitions/Model"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
  /models/upload/url:
    post:
      tags:
      - "models"
      summary: "Url for the mathematical model for the optimization solver"
      description: ""
      operationId: "optimization_model_url"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "upModelUrl"
        description: "Url of the mathematical model that needs to be added to the\
          \ optimization framework"
        required: true
        schema:
          $ref: "#/definitions/Model_url"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
  /data_source/mqtt:
    post:
      tags:
      - "data_source"
      summary: "Creates a new mqtt data source as input"
      description: ""
      operationId: "mqtt_input_source"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "MQTT_Input_Source"
        description: "Data source to be created"
        required: true
        schema:
          $ref: "#/definitions/MQTTInputSource"
      responses:
        201:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"
  /data_source/mqtt/{id}:
    put:
      tags:
      - "data_source"
      summary: "Submits data to the framework"
      description: ""
      operationId: "mqtt_input_put"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the data source"
        required: true
        type: "string"
      - in: "body"
        name: "dataset"
        description: "Dataset submitted to the framework"
        required: true
        schema:
          $ref: "#/definitions/MQTTInputSource"
      responses:
        200:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"
    delete:
      tags:
      - "data_source"
      summary: "Deletes the loaded data"
      description: ""
      operationId: "delete_mqtt_registry"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the registry to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"
  /data_source/file:
    post:
      tags:
      - "data_source"
      summary: "Creates a new data source as input"
      description: ""
      operationId: "file_input_source"
      consumes:
      - "application/json"
      - "text/plain"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "File_Input_Source"
        description: "Dataset submitted to the framework"
        required: true
        schema:
          $ref: "#/definitions/FileInputSource"
      responses:
        201:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"
  /data_source/file/{id}:
    get:
      tags:
      - "data_source"
      summary: "Receives data from the framework"
      description: ""
      operationId: "get_data_source_values"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "param_name"
        in: "path"
        description: "Name of the parameter of the optimization model"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "ID of the data source"
        required: true
        type: "string"
      responses:
        200:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"
    put:
      tags:
      - "data_source"
      summary: "Submits data to the framework"
      description: ""
      operationId: "file_input_put"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the data source"
        required: true
        type: "string"
      - in: "body"
        name: "dataset"
        description: "Dataset submitted to the framework"
        required: true
        schema:
          $ref: "#/definitions/FileInputSource"
      responses:
        200:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"
    delete:
      tags:
      - "data_source"
      summary: "Deletes the loaded data"
      description: ""
      operationId: "delete_file_registry"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the registry to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"
  /data_source/{id}:
    delete:
      tags:
      - "data_source"
      summary: "Deletes all loaded data"
      description: ""
      operationId: "delete_data_source_all"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the data source to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"
  /control/mqtt/{id}:
    put:
      tags:
      - "control"
      summary: "Creates a new control setpoint as ouput"
      description: ""
      operationId: "output_source_mqtt"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the data source to be actualized"
        required: true
        type: "string"
      - in: "body"
        name: "Output_Source"
        description: "Output data source to be created"
        required: true
        schema:
          $ref: "#/definitions/OutputSource"
      responses:
        200:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.control_controller"
    delete:
      tags:
      - "control"
      summary: "Deletes the registration output of the framework"
      description: ""
      operationId: "delete_mqtt_output"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the registry to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.control_controller"
  /control/file/{id}:
    get:
      tags:
      - "control"
      summary: "Get ouput of the optimization"
      description: ""
      operationId: "output_source_file"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the registry to be actualized"
        required: true
        type: "string"
      responses:
        200:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.control_controller"
    delete:
      tags:
      - "control"
      summary: "Deletes the output of the framework"
      description: ""
      operationId: "delete_file_output"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the registry to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.control_controller"
  /command/start/{id}:
    put:
      tags:
      - "command"
      summary: "Command for starting the framework"
      description: ""
      operationId: "framework_start"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the registry to be started"
        required: true
        type: "string"
      - in: "body"
        name: "startOFW"
        description: "Start command for the optimization framework \n repetitions:\
          \ -1 infinite repetitions"
        required: true
        schema:
          $ref: "#/definitions/Start"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.command_controller"
  /command/stop/{id}:
    put:
      tags:
      - "command"
      summary: "Command for stoping the framework"
      description: ""
      operationId: "framework_stop"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the registry to be stopped"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.command_controller"
definitions:
  Start:
    type: "object"
    required:
    - "control_frequency"
    - "dT_in_seconds"
    - "horizon_in_steps"
    - "repetition"
    properties:
      repetition:
        type: "integer"
        format: "int32"
      control_frequency:
        type: "integer"
        format: "int32"
      horizon_in_steps:
        type: "integer"
        format: "int32"
      model_name:
        type: "string"
      solver:
        type: "string"
      dT_in_seconds:
        type: "integer"
        format: "int32"
    example:
      control_frequency: 30
      horizon_in_steps: 24
      dT_in_seconds: 3600
      model_name: "model_name"
      repetition: 0
      solver: "solver"
  Path_Definition:
    type: "object"
    required:
    - "path"
    properties:
      path:
        type: "string"
        description: "Path where the results will be stored"
  Load:
    type: "object"
    properties:
      P_Load:
        $ref: "#/definitions/Source"
      P_Load_R:
        $ref: "#/definitions/Source"
      P_Load_S:
        $ref: "#/definitions/Source"
      P_Load_T:
        $ref: "#/definitions/Source"
      Q_Load:
        $ref: "#/definitions/Source"
      Q_Load_R:
        $ref: "#/definitions/Source"
      Q_Load_S:
        $ref: "#/definitions/Source"
      Q_Load_T:
        $ref: "#/definitions/Source"
      meta:
        $ref: "#/definitions/metaLoad"
    example:
      P_Load_R:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_Load_T:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      P_Load_S:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_Load_S:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      P_Load_T:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_Load:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      meta:
        pf_Load: 0.602745599999999992490984368487261235713958740234375
      P_Load:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_Load_R:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
  metaLoad:
    type: "object"
    properties:
      pf_Load:
        type: "number"
        format: "float"
        minimum: 0
        maximum: 1
    example:
      pf_Load: 0.602745599999999992490984368487261235713958740234375
  PV:
    type: "object"
    properties:
      P_PV:
        $ref: "#/definitions/Source"
      P_PV_R:
        $ref: "#/definitions/Source"
      P_PV_S:
        $ref: "#/definitions/Source"
      P_PV_T:
        $ref: "#/definitions/Source"
      Q_PV:
        $ref: "#/definitions/Source"
      Q_PV_R:
        $ref: "#/definitions/Source"
      Q_PV_S:
        $ref: "#/definitions/Source"
      Q_PV_T:
        $ref: "#/definitions/Source"
      meta:
        $ref: "#/definitions/metaPV"
    description: "Definition of a PV element as input for the optimizer"
    example:
      P_PV:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_PV_S:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_PV_T:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_PV:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      meta:
        PV_Inv_Max_Power: 1
      P_PV_R:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      P_PV_S:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      P_PV_T:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_PV_R:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
  PV_Output:
    type: "object"
    properties:
      P_PV_Output:
        $ref: "#/definitions/Source"
      P_PV_R_Output:
        $ref: "#/definitions/Source"
      P_PV_S_Output:
        $ref: "#/definitions/Source"
      P_PV_T_Output:
        $ref: "#/definitions/Source"
      Q_PV_Output:
        $ref: "#/definitions/Source"
      Q_PV_R_Output:
        $ref: "#/definitions/Source"
      Q_PV_S_Output:
        $ref: "#/definitions/Source"
      Q_PV_T_Output:
        $ref: "#/definitions/Source"
    example:
      Q_PV_T_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      P_PV_R_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      P_PV_T_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_PV_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      P_PV_S_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_PV_R_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_PV_S_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      P_PV_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
  metaPV:
    type: "object"
    properties:
      PV_Inv_Max_Power:
        type: "integer"
        format: "int32"
      City:
        type: "string"
      Country:
        type: "string"
    example:
      PV_Inv_Max_Power: 2
      City: "Bonn"
      Country: "Germany"
  ESS:
    type: "object"
    required:
    - "SoC_Value"
    properties:
      SoC_Value:
        $ref: "#/definitions/SourceESS"
      meta:
        $ref: "#/definitions/metaESS"
    example:
      SoC_Value:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      meta:
        ESS_Max_Discharge_Power: 9.301444000000000045247361413203179836273193359375
        ESS_Max_SoC: 5.63737699999999986033571985899470746517181396484375
        ESS_Charging_Eff: 3.61607669999999981058635967201553285121917724609375
        ESS_Min_SoC: 5.96213399999999982270537657313980162143707275390625
        ESS_Max_Charge_Power: 7.06140140000000027242776923230849206447601318359375
        ESS_Discharging_Eff: 2.027123000000000008213874025386758148670196533203125
        ESS_Capacity: 2.30213599999999996015276337857358157634735107421875
  ESS_Output:
    type: "object"
    required:
    - "P_ESS_Output"
    properties:
      P_ESS_Output:
        description: "Setting power of the ESS"
        $ref: "#/definitions/Source"
    example:
      P_ESS_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
  metaESS:
    type: "object"
    properties:
      ESS_Min_SoC:
        type: "number"
        format: "float"
      ESS_Max_SoC:
        type: "number"
        format: "float"
      ESS_Capacity:
        type: "number"
        format: "float"
      ESS_Max_Charge_Power:
        type: "number"
        format: "float"
      ESS_Max_Discharge_Power:
        type: "number"
        format: "float"
      ESS_Charging_Eff:
        type: "number"
        format: "float"
      ESS_Discharging_Eff:
        type: "number"
        format: "float"
    example:
      ESS_Max_Discharge_Power: 9.301444000000000045247361413203179836273193359375
      ESS_Max_SoC: 5.63737699999999986033571985899470746517181396484375
      ESS_Charging_Eff: 3.61607669999999981058635967201553285121917724609375
      ESS_Min_SoC: 5.96213399999999982270537657313980162143707275390625
      ESS_Max_Charge_Power: 7.06140140000000027242776923230849206447601318359375
      ESS_Discharging_Eff: 2.027123000000000008213874025386758148670196533203125
      ESS_Capacity: 2.30213599999999996015276337857358157634735107421875
  grid:
    type: "object"
    properties:
      meta:
        $ref: "#/definitions/metaGrid"
    example:
      meta:
        Q_Grid_Max_Export_Power: 7
        Min_Voltage_Drop: 1.0246456999999999926131977190379984676837921142578125
        P_Grid_Max_Export_Power: 4
        Max_Voltage_Drop: 1.2315134999999999276809603543370030820369720458984375
  grid_Output:
    type: "object"
    properties:
      P_Grid_Output:
        $ref: "#/definitions/Source"
      P_Grid_R_Output:
        $ref: "#/definitions/Source"
      P_Grid_S_Output:
        $ref: "#/definitions/Source"
      P_Grid_T_Output:
        $ref: "#/definitions/Source"
      Q_Grid_Output:
        $ref: "#/definitions/Source"
      Q_Grid_R_Output:
        $ref: "#/definitions/Source"
      Q_Grid_S_Output:
        $ref: "#/definitions/Source"
      Q_Grid_T_Output:
        $ref: "#/definitions/Source"
    example:
      P_Grid_R_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      P_Grid_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      P_Grid_T_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      P_Grid_S_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_Grid_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_Grid_R_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_Grid_S_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      Q_Grid_T_Output:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
  metaGrid:
    type: "object"
    properties:
      P_Grid_Max_Export_Power:
        type: "integer"
        format: "int32"
      Q_Grid_Max_Export_Power:
        type: "integer"
        format: "int32"
      Max_Voltage_Drop:
        type: "number"
        format: "float"
      Min_Voltage_Drop:
        type: "number"
        format: "float"
    example:
      Q_Grid_Max_Export_Power: 7
      Min_Voltage_Drop: 1.0246456999999999926131977190379984676837921142578125
      P_Grid_Max_Export_Power: 4
      Max_Voltage_Drop: 1.2315134999999999276809603543370030820369720458984375
  Source:
    type: "object"
    properties:
      mqtt:
        $ref: "#/definitions/MQTT"
    description: "Selection between MQTT or file mode inputs or outputs"
    example:
      mqtt:
        qos: 0
        host: "host"
        topic: "topic"
  SourceESS:
    type: "object"
    properties:
      mqtt:
        $ref: "#/definitions/MQTT"
    example:
      mqtt:
        qos: 0
        host: "host"
        topic: "topic"
  MQTT:
    type: "object"
    required:
    - "host"
    properties:
      host:
        type: "string"
      topic:
        type: "string"
      qos:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 2
    example:
      qos: 0
      host: "host"
      topic: "topic"
  dataset:
    type: "object"
    properties:
      bn:
        type: "string"
      bt:
        type: "integer"
        format: "int64"
      bu:
        type: "string"
      ver:
        type: "integer"
        format: "int64"
      e:
        $ref: "#/definitions/e"
  e:
    type: "object"
    properties:
      t:
        type: "integer"
        format: "int64"
      n:
        type: "string"
      u:
        type: "string"
      v:
        type: "integer"
        format: "int64"
      sv:
        type: "string"
      bv:
        type: "boolean"
  Model:
    type: "object"
    xml:
      name: "Model"
  Model_url:
    type: "object"
    required:
    - "upModelUrl"
    properties:
      upModelUrl:
        type: "string"
    xml:
      name: "ModelUrl"
      wrapped: true
  MQTTInputSource:
    type: "object"
    properties:
      generic:
        $ref: "#/definitions/Generic"
      load:
        $ref: "#/definitions/Load"
      photovoltaic:
        $ref: "#/definitions/PV"
      ESS:
        $ref: "#/definitions/ESS"
      grid:
        $ref: "#/definitions/grid"
      global_control:
        $ref: "#/definitions/Global_Control"
    example:
      load:
        P_Load_R:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_Load_T:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        P_Load_S:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_Load_S:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        P_Load_T:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_Load:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        meta:
          pf_Load: 0.602745599999999992490984368487261235713958740234375
        P_Load:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_Load_R:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
      ESS:
        SoC_Value:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        meta:
          ESS_Max_Discharge_Power: 9.301444000000000045247361413203179836273193359375
          ESS_Max_SoC: 5.63737699999999986033571985899470746517181396484375
          ESS_Charging_Eff: 3.61607669999999981058635967201553285121917724609375
          ESS_Min_SoC: 5.96213399999999982270537657313980162143707275390625
          ESS_Max_Charge_Power: 7.06140140000000027242776923230849206447601318359375
          ESS_Discharging_Eff: 2.027123000000000008213874025386758148670196533203125
          ESS_Capacity: 2.30213599999999996015276337857358157634735107421875
      grid:
        meta:
          Q_Grid_Max_Export_Power: 7
          Min_Voltage_Drop: 1.0246456999999999926131977190379984676837921142578125
          P_Grid_Max_Export_Power: 4
          Max_Voltage_Drop: 1.2315134999999999276809603543370030820369720458984375
      photovoltaic:
        P_PV:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_PV_S:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_PV_T:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_PV:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        meta:
          PV_Inv_Max_Power: 1
          City: "Bonn"
          Country: "Germany"
        P_PV_R:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        P_PV_S:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        P_PV_T:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_PV_R:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
      generic: ""
      global_control:
        ESS_Control:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
  FileInputSource:
    type: "object"
    properties:
      generic:
        $ref: "#/definitions/Generic_Files"
      load:
        $ref: "#/definitions/Load_File"
      photovoltaic:
        $ref: "#/definitions/PV_File"
      ESS:
        $ref: "#/definitions/ESS_File"
      grid:
        $ref: "#/definitions/grid"
      global_control:
        $ref: "#/definitions/Global_Control_File"
    example:
      load:
        P_Load_R:
        - 6.02745618307040320615897144307382404804229736328125
        - 6.02745618307040320615897144307382404804229736328125
        Q_Load_T:
        - 9.301444243932575517419536481611430644989013671875
        - 9.301444243932575517419536481611430644989013671875
        P_Load_S:
        - 1.46581298050294517310021547018550336360931396484375
        - 1.46581298050294517310021547018550336360931396484375
        Q_Load_S:
        - 7.061401241503109105224211816675961017608642578125
        - 7.061401241503109105224211816675961017608642578125
        P_Load_T:
        - 5.962133916683182377482808078639209270477294921875
        - 5.962133916683182377482808078639209270477294921875
        Q_Load:
        - 5.63737665663332876420099637471139430999755859375
        - 5.63737665663332876420099637471139430999755859375
        meta:
          pf_Load: 0.602745599999999992490984368487261235713958740234375
        P_Load:
        - 0.80082819046101150206595775671303272247314453125
        - 0.80082819046101150206595775671303272247314453125
        Q_Load_R:
        - 2.3021358869347654518833223846741020679473876953125
        - 2.3021358869347654518833223846741020679473876953125
      ESS:
        SoC_Value: 41.45608029883936040960179525427520275115966796875
        meta:
          ESS_Max_Discharge_Power: 9.301444000000000045247361413203179836273193359375
          ESS_Max_SoC: 5.63737699999999986033571985899470746517181396484375
          ESS_Charging_Eff: 3.61607669999999981058635967201553285121917724609375
          ESS_Min_SoC: 5.96213399999999982270537657313980162143707275390625
          ESS_Max_Charge_Power: 7.06140140000000027242776923230849206447601318359375
          ESS_Discharging_Eff: 2.027123000000000008213874025386758148670196533203125
          ESS_Capacity: 2.30213599999999996015276337857358157634735107421875
      grid:
        meta:
          Q_Grid_Max_Export_Power: 7
          Min_Voltage_Drop: 1.0246456999999999926131977190379984676837921142578125
          P_Grid_Max_Export_Power: 4
          Max_Voltage_Drop: 1.2315134999999999276809603543370030820369720458984375
      photovoltaic:
        P_PV:
        - 3.61607674925191080461672754609026014804840087890625
        - 3.61607674925191080461672754609026014804840087890625
        meta:
          PV_Inv_Max_Power: 2
          City: "Bonn"
          Country: "Germany"
      generic: ""
      global_control:
        ESS_Control:
        - 7.3862819483858839220147274318151175975799560546875
        - 7.3862819483858839220147274318151175975799560546875
  OutputSource:
    type: "object"
    properties:
      photovoltaic:
        $ref: "#/definitions/PV_Output"
      ESS:
        $ref: "#/definitions/ESS_Output"
      grid:
        $ref: "#/definitions/grid_Output"
    example:
      ESS:
        P_ESS_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
      grid:
        P_Grid_R_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        P_Grid_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        P_Grid_T_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        P_Grid_S_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_Grid_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_Grid_R_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_Grid_S_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_Grid_T_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
      photovoltaic:
        Q_PV_T_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        P_PV_R_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        P_PV_T_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_PV_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        P_PV_S_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_PV_R_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        Q_PV_S_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
        P_PV_Output:
          mqtt:
            qos: 0
            host: "host"
            topic: "topic"
  Model_answer:
    type: "object"
    properties:
      models:
        type: "array"
        items:
          $ref: "#/definitions/Model_Output"
    example:
      models:
      - name: "name"
        solver: "solver"
      - name: "name"
        solver: "solver"
  Model_Output:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
      solver:
        type: "string"
    example:
      name: "name"
      solver: "solver"
  Global_Control:
    type: "object"
    required:
    - "ESS_Control"
    properties:
      ESS_Control:
        $ref: "#/definitions/Source"
    example:
      ESS_Control:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
  Global_Control_File:
    type: "object"
    required:
    - "ESS_Control"
    properties:
      ESS_Control:
        type: "array"
        items:
          type: "number"
    example:
      ESS_Control:
      - 7.3862819483858839220147274318151175975799560546875
      - 7.3862819483858839220147274318151175975799560546875
  PV_File:
    type: "object"
    required:
    - "P_PV"
    properties:
      P_PV:
        type: "array"
        items:
          type: "number"
      meta:
        $ref: "#/definitions/metaPV"
    example:
      P_PV:
      - 3.61607674925191080461672754609026014804840087890625
      - 3.61607674925191080461672754609026014804840087890625
      meta:
        PV_Inv_Max_Power: 2
        City: "Bonn"
        Country: "Germany"
  Load_File:
    type: "object"
    properties:
      P_Load:
        type: "array"
        items:
          type: "number"
      P_Load_R:
        type: "array"
        items:
          type: "number"
      P_Load_S:
        type: "array"
        items:
          type: "number"
      P_Load_T:
        type: "array"
        items:
          type: "number"
      Q_Load:
        type: "array"
        items:
          type: "number"
      Q_Load_R:
        type: "array"
        items:
          type: "number"
      Q_Load_S:
        type: "array"
        items:
          type: "number"
      Q_Load_T:
        type: "array"
        items:
          type: "number"
      meta:
        $ref: "#/definitions/metaLoad"
    example:
      P_Load_R:
      - 6.02745618307040320615897144307382404804229736328125
      - 6.02745618307040320615897144307382404804229736328125
      Q_Load_T:
      - 9.301444243932575517419536481611430644989013671875
      - 9.301444243932575517419536481611430644989013671875
      P_Load_S:
      - 1.46581298050294517310021547018550336360931396484375
      - 1.46581298050294517310021547018550336360931396484375
      Q_Load_S:
      - 7.061401241503109105224211816675961017608642578125
      - 7.061401241503109105224211816675961017608642578125
      P_Load_T:
      - 5.962133916683182377482808078639209270477294921875
      - 5.962133916683182377482808078639209270477294921875
      Q_Load:
      - 5.63737665663332876420099637471139430999755859375
      - 5.63737665663332876420099637471139430999755859375
      meta:
        pf_Load: 0.602745599999999992490984368487261235713958740234375
      P_Load:
      - 0.80082819046101150206595775671303272247314453125
      - 0.80082819046101150206595775671303272247314453125
      Q_Load_R:
      - 2.3021358869347654518833223846741020679473876953125
      - 2.3021358869347654518833223846741020679473876953125
  ESS_File:
    type: "object"
    required:
    - "SoC_Value"
    properties:
      SoC_Value:
        type: "number"
        minimum: 0
        maximum: 100
      meta:
        $ref: "#/definitions/metaESS"
    example:
      SoC_Value: 41.45608029883936040960179525427520275115966796875
      meta:
        ESS_Max_Discharge_Power: 9.301444000000000045247361413203179836273193359375
        ESS_Max_SoC: 5.63737699999999986033571985899470746517181396484375
        ESS_Charging_Eff: 3.61607669999999981058635967201553285121917724609375
        ESS_Min_SoC: 5.96213399999999982270537657313980162143707275390625
        ESS_Max_Charge_Power: 7.06140140000000027242776923230849206447601318359375
        ESS_Discharging_Eff: 2.027123000000000008213874025386758148670196533203125
        ESS_Capacity: 2.30213599999999996015276337857358157634735107421875
  Generic:
    type: "array"
    items:
      $ref: "#/definitions/Generic_mqtt"
    example:
    - generic_name:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      name: "name1"
    - generic_name:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      name: "name2"
  Generic_mqtt:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "Name defining the parameter into the optimization model"
      generic_name:
        $ref: "#/definitions/Source"
    example:
      generic_name:
        mqtt:
          qos: 0
          host: "host"
          topic: "topic"
      name: "name"
  Generic_Files:
    type: "array"
    items:
      $ref: "#/definitions/Generic_File"
  Generic_File:
    type: "object"
    required:
    - "file"
    - "name"
    properties:
      name:
        type: "string"
        description: "Name defining the parameter into the optimization model"
      file:
        type: "array"
        items:
          type: "number"
