---
swagger: "2.0"
info:
  version: "0.0.2"
  title: "Optimization framework service"
  license:
    name: "Apache"
host: "192.168.99.100:8080"
basePath: "/v1"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /models:
    get:
      tags:
      - "models"
      summary: "Fetches all installed models in the framework"
      description: ""
      operationId: "get_models_in"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Model_answer"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
    delete:
      tags:
      - "models"
      summary: "Deletes all models of the framework"
      description: ""
      operationId: "delete_models_all"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
  /models/{name}:
    delete:
      tags:
      - "models"
      summary: "Deletes the desired model of the framework"
      description: ""
      operationId: "delete_models"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the model to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
  /models/upload/{name}:
    post:
      tags:
      - "models"
      summary: "Mathematical model for the optimization solver"
      description: ""
      operationId: "optimization_model"
      consumes:
      - "text/plain"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the loaded model"
        required: true
        type: "string"
      - in: "body"
        name: "upModel"
        description: "Mathematical model that needs to be added to the optimization\
          \ framework"
        required: true
        schema:
          $ref: "#/definitions/Model"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
  /models/upload/url:
    post:
      tags:
      - "models"
      summary: "Url for the mathematical model for the optimization solver"
      description: ""
      operationId: "optimization_model_url"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "upModelUrl"
        description: "Url of the mathematical model that needs to be added to the\
          \ optimization framework"
        required: true
        schema:
          $ref: "#/definitions/Model_url"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.models_controller"
  /data_source/mqtt:
    post:
      tags:
      - "data_source"
      summary: "Creates a new mqtt data source as input"
      description: ""
      operationId: "mqtt_input_source"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "MQTT_Input_Source"
        description: "Data source to be created"
        required: true
        schema:
          $ref: "#/definitions/MQTTInputSource"
      responses:
        201:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"

  /data_source/file:
    post:
      tags:
      - "data_source"
      summary: "Creates a new data source as input"
      description: ""
      operationId: "file_input_source"
      consumes:
      - "application/json"
      - "text/plain"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "File_Input_Source"
        description: "Dataset submitted to the framework"
        required: true
        schema:
          $ref: "#/definitions/FileInputSource"
      responses:
        201:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"

  /data_source/{id}:
    delete:
      tags:
      - "data_source"
      summary: "Deletes all loaded data"
      description: ""
      operationId: "delete_data_source_all"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the data source to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"

  /data_source/{param_name}/{id}:
    get:
      tags:
      - "data_source"
      summary: "Receives data from the framework"
      description: ""
      operationId: "get_data_source_values"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "param_name"
        in: "path"
        description: "Name of the parameter of the optimization model"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "ID of the data source"
        required: true
        type: "string"
      responses:
        200:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"
    put:
      tags:
      - "data_source"
      summary: "Submits data to the framework"
      description: ""
      operationId: "data_in_parameter"
      consumes:
      - "application/json"
      - "text/plain"
      produces:
      - "application/json"
      parameters:
      - name: "param_name"
        in: "path"
        description: "Name of the data source"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "ID of the data source"
        required: true
        type: "string"
      - in: "body"
        name: "dataset"
        description: "Dataset submitted to the framework"
        required: true
        schema:
          type: "object"
      responses:
        200:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"
    delete:
      tags:
      - "data_source"
      summary: "Deletes the loaded data"
      description: ""
      operationId: "delete_parameter_data"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "param_name"
        in: "path"
        description: "Name of the data source"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Name of the registry to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.data_source_controller"

  /control/mqtt/{id}:
    put:
      tags:
      - "control"
      summary: "Creates a new control setpoint as ouput"
      description: ""
      operationId: "output_source_mqtt"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the data source to be actualized"
        required: true
        type: "string"
      - in: "body"
        name: "Output_Source"
        description: "Output data source to be created"
        required: true
        schema:
          $ref: "#/definitions/OutputSource"
      responses:
        200:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.control_controller"
    delete:
      tags:
      - "control"
      summary: "Deletes the registration output of the framework"
      description: ""
      operationId: "delete_mqtt_output"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the registry to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.control_controller"
  /control/file/{id}:
    put:
      tags:
      - "control"
      summary: "Creates a new data source as ouput"
      description: ""
      operationId: "output_source_file"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the registry to be actualized"
        required: true
        type: "string"
      - in: "body"
        name: "Output_Source"
        description: "Output data source to be created"
        required: true
        schema:
          $ref: "#/definitions/Path_Definition"

      responses:
        200:
          description: "Created succesfully"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.control_controller"
    delete:
      tags:
      - "control"
      summary: "Deletes the registration output of the framework"
      description: ""
      operationId: "delete_file_output"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the registry to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        405:
          description: "Invalid input"
        500:
          description: "Internal server error"
      x-swagger-router-controller: "swagger_server.controllers.control_controller"

  /command/start/{id}:
    put:
      tags:
      - "command"
      summary: "Command for starting the framework"
      description: ""
      operationId: "framework_start"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the registry to be started"
        required: true
        type: "string"
      - in: "body"
        name: "startOFW"
        description: "Start command for the optimization framework \n repetitions:\
          \ -1 infinite repetitions"
        required: true
        schema:
          $ref: "#/definitions/Start"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.command_controller"
  /command/stop/{id}:
    put:
      tags:
      - "command"
      summary: "Command for stoping the framework"
      description: ""
      operationId: "framework_stop"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the registry to be stopped"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.command_controller"


definitions:
  Start:
    type: "object"
    required:
    - "horizon"
    - "repetition"
    - "time_step"
    properties:
      repetition:
        type: "integer"
        format: "int32"
      time_step:
        type: "integer"
        format: "int32"
      horizon:
        type: "integer"
        format: "int32"
      model_name:
        type: "string"
      solver:
        type: "string"

  Path_Definition:
    type: "object"
    required:
    - "path"
    properties:
      path:
        type: "string"
        description: "Path where the results will be stored"

  Load:
    type: "object"
    required:
    - "P_Load"
    properties:
      P_Load:
        $ref: "#/definitions/Source"
      Q_Load:
        $ref: "#/definitions/Source"
      meta:
        $ref: "#/definitions/metaLoad"

  metaLoad:
    type: "object"
    properties:
      pf_Load:
        type: "number"
        format: "float"
        minimum: 0
        maximum: 1

  PV:
    type: "object"
    required:
    - "P_PV"
    properties:
      P_PV:
        $ref: "#/definitions/Source"
      meta:
        $ref: "#/definitions/metaPV"
    description: "Definition of a PV element as input for the optimizer"

  PV_Output:
    type: "object"
    required:
    - "P_PV_Output"
    properties:
      P_PV_Output:
        $ref: "#/definitions/Source"
      Q_PV_Output:
        $ref: "#/definitions/Source"

  metaPV:
    type: "object"
    properties:
      PV_Inv_Max_Power:
        type: "integer"
        format: "int32"
    example:
      PV_Inv_Max_Power: 1
  ESS:
    type: "object"
    required:
    - "SoC_Value"
    properties:
      SoC_Value:
        $ref: "#/definitions/SourceESS"
      meta:
        $ref: "#/definitions/metaESS"

  ESS_Output:
    type: "object"
    required:
    - "P_ESS_Output"
    properties:
      P_ESS_Output:
        description: "Setting power of the ESS"
        $ref: "#/definitions/Source"

  metaESS:
    type: "object"
    properties:
      ESS_Min_SoC:
        type: "number"
        format: "float"
      ESS_Max_SoC:
        type: "number"
        format: "float"
      ESS_Capacity:
        type: "number"
        format: "float"
      ESS_Max_Charge_Power:
        type: "number"
        format: "float"
      ESS_Max_Discharge_Power:
        type: "number"
        format: "float"
      ESS_Charging_Eff:
        type: "number"
        format: "float"
      ESS_Discharging_Eff:
        type: "number"
        format: "float"

  grid:
    type: "object"
    properties:
      meta:
        $ref: "#/definitions/metaGrid"

  grid_Output:
    type: "object"
    required:
    - "P_Grid_Export_Output"
    properties:
      P_Grid_Export_Output:
        $ref: "#/definitions/Source"
      Q_Grid_Export_Output:
        $ref: "#/definitions/Source"
      P_Grid_Import_Output:
        $ref: "#/definitions/Source"
      Q_Grid_Import_Output:
        $ref: "#/definitions/Source"

  metaGrid:
    type: "object"
    properties:
      P_Grid_Max_Export_Power:
        type: "integer"
        format: "int32"
      Q_Grid_Max_Export_Power:
        type: "integer"
        format: "int32"
      Max_Voltage_Drop:
        type: "number"
        format: "float"
      Min_Voltage_Drop:
        type: "number"
        format: "float"

  Source:
    type: "object"
    properties:
      mqtt:
        $ref: "#/definitions/MQTT"
    description: "Selection between MQTT or file mode inputs or outputs"


  SourceESS:
    type: "object"
    properties:
      mqtt:
        $ref: "#/definitions/MQTT"

  SourceESSFile:
    type: "object"
    properties:
      value_percent:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 100

  MQTT:
    type: "object"
    required:
    - "host"
    properties:
      host:
        type: "string"
      topic:
        type: "string"
      qos:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 2

  dataset:
    type: "object"
    properties:
      bn:
        type: "string"
      bt:
        type: "integer"
        format: "int64"
      bu:
        type: "string"
      ver:
        type: "integer"
        format: "int64"
      e:
        $ref: "#/definitions/e"
  e:
    type: "object"
    properties:
      t:
        type: "integer"
        format: "int64"
      n:
        type: "string"
      u:
        type: "string"
      v:
        type: "integer"
        format: "int64"
      sv:
        type: "string"
      bv:
        type: "boolean"
  Model:
    type: "object"
    xml:
      name: "Model"

  Model_url:
    type: "object"
    required:
    - "upModelUrl"
    properties:
      upModelUrl:
        type: "string"
    xml:
      name: "ModelUrl"
      wrapped: true

  MQTTInputSource:
    type: "object"
    properties:
      generic:
        $ref: "#/definitions/Generic"
      load:
        $ref: "#/definitions/Load"
      photovoltaic:
        $ref: "#/definitions/PV"
      ESS:
        $ref: "#/definitions/ESS"
      grid:
        $ref: "#/definitions/grid"
      global_control:
        $ref: "#/definitions/Global_Control"


  FileInputSource:
    type: "object"
    properties:
      generic:
        $ref: "#/definitions/Generic_File"
      load:
        $ref: "#/definitions/Load_File"
      photovoltaic:
        $ref: "#/definitions/PV_File"
      ESS:
        $ref: "#/definitions/ESS_File"
      grid:
        $ref: "#/definitions/grid"
      global_control:
        $ref: "#/definitions/Global_Control_File"


  OutputSource:
    type: "object"
    properties:
      photovoltaic:
        $ref: "#/definitions/PV_Output"
      ESS:
        $ref: "#/definitions/ESS_Output"
      grid:
        $ref: "#/definitions/grid_Output"

  Model_answer:
    type: "object"
    properties:
      models:
        type: "array"
        items:
          $ref: "#/definitions/Model_Output"

  Model_Output:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
      solver:
        type: "string"

  Global_Control:
    type: "object"
    required:
    - "ESS_Control"
    properties:
      ESS_Control:
        $ref: "#/definitions/Source"

  Global_Control_File:
    type: "object"
    required:
    - "ESS_Control"
    properties:
      ESS_Control:
        type: "object"

  PV_File:
    type: "object"
    required:
    - "P_PV"
    properties:
      P_PV:
        type: array
        items:
          type: number
      meta:
        $ref: "#/definitions/metaPV"

  ESS_File:
    type: "object"
    required:
    - "SoC_Value"
    properties:
      SoC_Value:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 100
      meta:
        $ref: "#/definitions/metaESS"

  Load_File:
    type: "object"
    required:
    - "P_Load"
    properties:
      P_Load:
        type: "object"
        description: "Inserting data as plain text"
      Q_Load:
        type: "object"
        description: "Inserting data as plain text"
      meta:
        $ref: "#/definitions/metaLoad"


  Generic:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "Name defining the parameter into the optimization model"
      generic_name:
        $ref: "#/definitions/Source"

  Generic_File:
    type: "object"
    required:
    - "file"
    properties:
      name:
        type: "string"
        description: "Name defining the parameter into the optimization model"
      file:
        type: "object"
        description: "Inserting data as plain text"

